import asyncio
import aiohttp
import requests
import random
import json

class GenPipeline:
    def __init__(self, api_key, url='https://api.deepseek.com/chat/completions',  model_name='deepseek-chat'):
        self.headers =  {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json",
        }
        self.model_name = model_name
        self.url = url
    
    def generate(self, input_text, output_text, prompt, question, temperature=1.25):
        
        # risk_scene = ['支付宝', '微信', '京东白条', 'QQ', '银行', '政府', '警察', '飞书', 'APP', '快手', '朋友', '税务',
        #     '社交媒体', '电子邮件', '短信', '电话', '在线购物平台', '投资网站', '约会应用', '招聘网站', '游戏平台',
        #     '虚拟货币交易平台', '慈善机构', '教育机构', '医疗保健', '法律服务', '物流公司', '旅游网站', '汽车销售',
        #     '房地产', '保险', '信用卡公司', '贷款服务', '技术支持', '在线论坛', '博客', '视频平台', '音乐平台',
        #     '新闻网站', '图书销售', '艺术品拍卖', '体育赛事', '彩票', '股票交易', '外汇交易', '在线教育', '远程工作',
        #     '自由职业平台', '众筹平台', '健康管理', '美容服务', '餐饮预订', '家政服务', '宠物服务', '金融服务',
        #     '保险理赔', '法律咨询', '移民服务', '留学服务', '职业培训', '技能认证', '在线会议', '网络研讨会',
        #     '虚拟活动', '在线课程', '电子书阅读', '有声书', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩',
        #     '在线医疗咨询', '药品购买', '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务',
        #     '儿童教育', '在线娱乐', '电影票务', '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订',
        #     '租车服务', '导游服务', '旅游保险', '旅游攻略', '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影',
        #     '旅游纪念品', '旅游体验', '在线购物', '电子产品', '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品',
        #     '玩具', '图书音像', '办公用品', '汽车配件', '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁',
        #     '汽车销售', '二手车交易', '汽车保险', '房地产买卖', '房地产租赁', '房地产评估', '房地产咨询', '房地产装修',
        #     '房地产管理', '房地产投资', '房地产贷款', '金融服务', '个人贷款', '企业贷款', '信用卡申请', '信用卡还款',
        #     '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险', '保险投资', '保险理财', '保险规划', '法律服务','移民服务', '留学服务', '签证申请', '签证续签',
        #     '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资', '留学规划', '职业培训', '技能认证', '职业规划', '职业咨询',
        #     '职业发展', '职业评估', '职业指导', '职业介绍', '职业招聘', '在线会议', '网络研讨会', '虚拟活动', '在线课程',
        #     '电子书阅读', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩', '在线医疗咨询', '药品购买',
        #     '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务', '儿童教育', '在线娱乐', '电影票务',
        #     '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订', '租车服务', '导游服务', '旅游保险', '旅游攻略',
        #     '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影', '旅游纪念品', '旅游体验', '在线购物', '电子产品',
        #     '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品', '图书音像', '办公用品', '汽车配件',
        #     '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁', '汽车销售', '二手车交易', '汽车保险', '房地产买卖',
        #     '房地产租赁', '房地产评估', '房地产咨询', '房地产装修', '房地产管理', '房地产投资', '房地产贷款', '金融服务',
        #     '个人贷款', '企业贷款', '信用卡申请', '信用卡还款', '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险',
        #     '保险购买', '法律诉讼', '法律调解','移民服务', '留学服务', '签证申请', '签证续签', '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资',
        #     '留学咨询', '留学规划', '留学申请', '留学签证', '留学服务', '留学生活', '留学就业', '职业培训', '技能认证', '职业规划', '职业咨询','职业招聘']
        # risk_victim = ["消费者", "游戏玩家", "网购者", "公民", "企业员工", "学生", "教育工作者", "病人", "健康意识者", 
        #     "法律事务当事人", "投资者", "单身人士", "求职者", "雇主", "视频观众", "音乐爱好者", "新闻读者", "书籍购买者", 
        #     "艺术收藏者", "体育爱好者", "投保者", "信用卡持卡人", "技术设备用户", "论坛用户", "博客读者"]
        # '''
        risk_way = ['转账', '添加好友', '下载应用', '充值', '加入群聊', '填写信息', '扫描二维码', '投资',
            '提供个人信息', '验证账户', '支付手续费', '领取奖品', '参与活动', '注册账号', '订阅服务', '购买商品', '申请贷款',
            '提交申请', '确认订单', '更新软件', '激活账户', '验证身份', '设置密码', '绑定银行卡', '授权登录', '分享内容',
            '参与调查', '填写问卷', '参与抽奖', '报名活动', '参与投票', '验证手机号', '激活优惠券',
            '预约服务', '咨询客服', '反馈问题', '提交反馈', '查看广告', '上传文件', '下载资料',
            '参与竞拍', '提交报价', '签订合同', '支付押金', '确认收货', '评价商品', '邀请好友', 
            '参与竞赛', '更新密码', '申请认证', '更新资料', '修改密码', '绑定邮箱', '设置安全问题', 
            '登录账户', '绑定手机', '验证邮箱', '设置支付密码', '修改绑定信息', '查看账户余额']

        
        victim_scene_path = "DataPipeline/output/dialog/victim_scene_match.json"
        scene_criminal_path = "DataPipeline/output/dialog/scene_criminal_match.json"
        with open(victim_scene_path, 'r') as f:
            victim_scene_dict = json.load(f)
        with open(scene_criminal_path, 'r') as f:
            scene_criminal_dict = json.load(f)[0]
        victim_scene = random.choice(victim_scene_dict)
        
        risk_victim = victim_scene['victim']
        risk_scene = random.choice(victim_scene['scene'])
        risk_criminal = random.choice(scene_criminal_dict[risk_scene])
        risk_way = random.choice(risk_way)
        
        question = question.replace("<risk_scene>",risk_scene)
        question = question.replace("<risk_way>",risk_way)
        question = question.replace("<risk_victim>",risk_victim)
        question = question.replace("<risk_criminal>",risk_criminal)
        
        print(f'<risk_scene>:{risk_scene}  <risk_way>:{risk_way}  <risk_victim>:{risk_victim}  <risk_criminal>:{risk_criminal}')
        
        # '''
        
        data = {
            "model": self.model_name,
            "messages": [
                 {"role": "system", "content": prompt},
                 {"role": "user", "content": input_text},
                 {"role": "assistant", "content": output_text},
                 {"role": "user", "content": question}
            ],
            "stream": False,
            "temperature": temperature
        }
        # print(data)
        resp = requests.post(self.url, headers=self.headers, json=data, verify=False)
        
        if resp.status_code == 200:
            return resp.json()["choices"][0]["message"]['content']
        # elif resp.status_code == 400:
        #     return "used up"
        else:
            print(f"Error: {resp.status_code}")
            return "failed"
        
    def __call__(self, input_text, output_text, prompt):
        return self.generate(self, input_text, output_text, prompt)
    





    # def generate_message(self,i, prompt, question,num ,temperature=1.25):
    #     risk_scene = ['支付宝', '微信', '京东白条', 'QQ', '银行', '政府', '警察', '飞书', 'APP', '快手', '朋友', '税务',
    #         '社交媒体', '电子邮件', '短信', '电话', '在线购物平台', '投资网站', '约会应用', '招聘网站', '游戏平台',
    #         '虚拟货币交易平台', '慈善机构', '教育机构', '医疗保健', '法律服务', '物流公司', '旅游网站', '汽车销售',
    #         '房地产', '保险', '信用卡公司', '贷款服务', '技术支持', '在线论坛', '博客', '视频平台', '音乐平台',
    #         '新闻网站', '图书销售', '艺术品拍卖', '体育赛事', '彩票', '股票交易', '外汇交易', '在线教育', '远程工作',
    #         '自由职业平台', '众筹平台', '健康管理', '美容服务', '餐饮预订', '家政服务', '宠物服务', '金融服务',
    #         '保险理赔', '法律咨询', '移民服务', '留学服务', '职业培训', '技能认证', '在线会议', '网络研讨会',
    #         '虚拟活动', '在线课程', '电子书阅读', '有声书', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩',
    #         '在线医疗咨询', '药品购买', '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务',
    #         '儿童教育', '在线娱乐', '电影票务', '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订',
    #         '租车服务', '导游服务', '旅游保险', '旅游攻略', '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影',
    #         '旅游纪念品', '旅游体验', '在线购物', '电子产品', '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品',
    #         '玩具', '图书音像', '办公用品', '汽车配件', '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁',
    #         '汽车销售', '二手车交易', '汽车保险', '房地产买卖', '房地产租赁', '房地产评估', '房地产咨询', '房地产装修',
    #         '房地产管理', '房地产投资', '房地产贷款', '金融服务', '个人贷款', '企业贷款', '信用卡申请', '信用卡还款',
    #         '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险', '保险投资', '保险理财', '保险规划', '法律服务','移民服务', '留学服务', '签证申请', '签证续签',
    #         '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资', '留学规划', '职业培训', '技能认证', '职业规划', '职业咨询',
    #         '职业发展', '职业评估', '职业指导', '职业介绍', '职业招聘', '在线会议', '网络研讨会', '虚拟活动', '在线课程',
    #         '电子书阅读', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩', '在线医疗咨询', '药品购买',
    #         '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务', '儿童教育', '在线娱乐', '电影票务',
    #         '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订', '租车服务', '导游服务', '旅游保险', '旅游攻略',
    #         '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影', '旅游纪念品', '旅游体验', '在线购物', '电子产品',
    #         '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品', '图书音像', '办公用品', '汽车配件',
    #         '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁', '汽车销售', '二手车交易', '汽车保险', '房地产买卖',
    #         '房地产租赁', '房地产评估', '房地产咨询', '房地产装修', '房地产管理', '房地产投资', '房地产贷款', '金融服务',
    #         '个人贷款', '企业贷款', '信用卡申请', '信用卡还款', '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险',
    #         '保险购买', '法律诉讼', '法律调解','移民服务', '留学服务', '签证申请', '签证续签', '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资',
    #         '留学咨询', '留学规划', '留学申请', '留学签证', '留学服务', '留学生活', '留学就业', '职业培训', '技能认证', '职业规划', '职业咨询','职业招聘']
        
    #     risk_people = ["消费者", "游戏玩家", "网购者", "公民", "企业员工", "学生", "教育工作者", "病人", "健康意识者", 
    #         "法律事务当事人", "投资者", "单身人士", "求职者", "雇主", "视频观众", "音乐爱好者", "新闻读者", "书籍购买者", 
    #         "艺术收藏者", "体育爱好者", "投保者", "信用卡持卡人", "技术设备用户", "论坛用户", "博客读者"]
        
    #     risk_way = ['转账', '添加好友', '下载应用', '充值', '加入群聊', '填写信息', '扫描二维码', '投资',
    #         '提供个人信息', '验证账户', '支付手续费', '领取奖品', '参与活动', '注册账号', '订阅服务', '购买商品', '申请贷款',
    #         '提交申请', '确认订单', '更新软件', '激活账户', '验证身份', '设置密码', '绑定银行卡', '授权登录', '分享内容',
    #         '参与调查', '填写问卷', '参与抽奖', '报名活动', '参与投票', '验证手机号', '激活优惠券',
    #         '预约服务', '咨询客服', '反馈问题', '提交反馈', '查看广告', '上传文件', '下载资料',
    #         '参与竞拍', '提交报价', '签订合同', '支付押金', '确认收货', '评价商品', '邀请好友', 
    #         '参与竞赛', '更新密码', '申请认证', '更新资料', '修改密码', '绑定邮箱', '设置安全问题', 
    #         '登录账户', '绑定手机', '验证邮箱', '设置支付密码', '修改绑定信息', '查看账户余额',]
       

    #     question = question.replace("<risk_scene>",random.choice(risk_scene))
    #     question = question.replace("<risk_people>",random.choice(risk_people))
    #     question = question.replace("<risk_way>",random.choice(risk_way))
    #     # question = question.replace("<risk_victim>",risk_victim)
    #     # question = question.replace("<risk_criminal>",risk_criminal)

    #     # example_user1 = "案情描述：2022年12月23日，在7-1-202家中想在网上贷款，于是在网上搜索并下载名为“小度”的软件，其认为是百度公司的“度小满”借款软件。后在网站注册并贷款三万元。其查询软件显示银行信息有误，银行卡冻结。遂联系该软件业务员，业务员称其银行卡填写错误，并给其发送一个二维码，通过该软件与客服沟通。照做，并下载“诚信通”软件。后该客服给其看“银监会”公告，称其涉嫌骗贷，需要交纳百分之五十的认证金15000元，并给发来一张银行卡号，并称操作成功后给其发放45000元。给该账号转款15000元。后去提现发现二次冻结。于是又问业务员是怎么回事，业务员称后台没有修改成功，就点提现导致贷款被冻结，需要交纳45000元解冻，意识被骗，遂报警，共计损失15000元。嫌疑账户：，账号：，浙江农村信用社。涉案APP：小度、诚信通。被害人通过嫌疑账号与对方联系，故无其他联系方式。国家反诈中心APP已采集被害人手机。经查，此案受害人自己从网上下载，不涉及嫌疑电话。案情对应风险类别为：贷款、代办信用卡类"
    #     # example_answer1 ='''[{"文本": "亲，您在小度软件申请的贷款填写的银行信息有误，银行卡现已被冻结，请请扫码下载“诚信通”APP，并按指示缴纳认证金方可解冻。", "风险点": "有"},{"文本": "您在小度软件的贷款申请已提交，请耐心等待审核结果。", "风险点": "无"}]'''

    #     # example_user2 = "案情描述：2022年10月08日17时许,报警称：2022年9月29日17时许，一个自称人事招聘的人给其打电话说看到你在网上发布了找工作信息，随后对方以介绍工作为由让其添加了QQ(),给其介绍了一个工作，对方给其介绍了工作的信息，帮助合作主播冲刺排名人气投票，提升影响力，之后给其发送了一款名为（-)的APP安装包,安装注册进入APP之后助理给其发任务，前期做一次任务给其每单返3-5元，一共做了20单左右以后，最后一单任务做错之后让其通过网银转账500元到（）中国邮政储蓄银行，才可以把之前做任务返利的钱提取出来，其充值完以后发现之前返利的钱还是提取不出来，让其再做任务，做完任务以后发现还是提取不出来，又让其继续转账6600元到徐泽宇（）苏州银行股份有限公司，充值完成以后还是提取不出来，又让其充值26000元，其意识到被骗没再充值了，第二天其就报警了。其共计被骗7100元。案情对应风险类别为：刷单返利类"
    #     # example_answer2 ='''[{"文本": "您好，我们注意到您在求职平台上发布了招聘信息，现有一份合作主播提升人气的工作机会，下载APP即可接取任务，每完成一单就可以返利3-5元，请添加QQ号123456789了解更多详情。", "风险点": "有"},{"文本": "感谢您在求职平台上的活跃，我们会持续关注您的求职动态，并为您推荐合适的工作机会。", "风险点": "无"}]'''
        
    #     example_user1 = "案情描述：2022年12月23日，在7-1-202家中想在网上贷款，于是在网上搜索并下载名为“小度”的软件，其认为是百度公司的“度小满”借款软件。后在网站注册并贷款三万元。其查询软件显示银行信息有误，银行卡冻结。遂联系该软件业务员，业务员称其银行卡填写错误，并给其发送一个二维码，通过该软件与客服沟通。照做，并下载“诚信通”软件。后该客服给其看“银监会”公告，称其涉嫌骗贷，需要交纳百分之五十的认证金15000元，并给发来一张银行卡号，并称操作成功后给其发放45000元。给该账号转款15000元。后去提现发现二次冻结。于是又问业务员是怎么回事，业务员称后台没有修改成功，就点提现导致贷款被冻结，需要交纳45000元解冻，意识被骗，遂报警，共计损失15000元。嫌疑账户：，账号：，浙江农村信用社。涉案APP：小度、诚信通。被害人通过嫌疑账号与对方联系，故无其他联系方式。国家反诈中心APP已采集被害人手机。经查，此案受害人自己从网上下载，不涉及嫌疑电话。案情对应风险类别为：贷款、代办信用卡类"
    #     example_answer1 ='''[{"文本": "亲，您在小度软件申请的贷款填写的银行信息有误，银行卡现已被冻结，请请扫码下载“诚信通”APP，并按指示缴纳认证金方可解冻。", "风险点": "有"}]'''

    #     example_user2 = "案情描述：2022年10月08日17时许,报警称：2022年9月29日17时许，一个自称人事招聘的人给其打电话说看到你在网上发布了找工作信息，随后对方以介绍工作为由让其添加了QQ(),给其介绍了一个工作，对方给其介绍了工作的信息，帮助合作主播冲刺排名人气投票，提升影响力，之后给其发送了一款名为（-)的APP安装包,安装注册进入APP之后助理给其发任务，前期做一次任务给其每单返3-5元，一共做了20单左右以后，最后一单任务做错之后让其通过网银转账500元到（）中国邮政储蓄银行，才可以把之前做任务返利的钱提取出来，其充值完以后发现之前返利的钱还是提取不出来，让其再做任务，做完任务以后发现还是提取不出来，又让其继续转账6600元到徐泽宇（）苏州银行股份有限公司，充值完成以后还是提取不出来，又让其充值26000元，其意识到被骗没再充值了，第二天其就报警了。其共计被骗7100元。案情对应风险类别为：刷单返利类"
    #     example_answer2 ='''[{"文本": "您好，我们注意到您在求职平台上发布了招聘信息，现有一份合作主播提升人气的工作机会，下载APP即可接取任务，每完成一单就可以返利3-5元，请添加QQ号123456789了解更多详情。", "风险点": "有"}]'''
        
    #     example_user3 = "案情描述：2022年11月12日13时45分，报警称：2022年11月10日，其在“闲鱼”软件上发现有个人给其留言，称每关注一个闲鱼账号可以返现5元钱，遂联系对方，按照对方的要求关注了一个闲鱼账号，对方给返现了5元佣金。后对方以闲鱼上不方便聊天为由，让其添加了微信好友，对方又通过微信给其发送了一个“东青互联科技”的软件二维码。下载软件后，在该软件上和对方联系，对方称可以做返现佣金更多的信用卡代还任务，该任务就是先在对方指定的账号中转账，然后再该软件中按照对方的要求操作点击“代还”，然后匹配订单，匹配后等待几分钟后刷新界面，显示还款成功，即完成一单。先按照对方的要求充值了一次后，成功提现了。11月12日，其又充值了一单3000元的，充值后在软件上匹配了一个28000元的大单，然后又补缴了25714元，按照对对方的要求做单后，显示需要做连单才能提现，发现被骗，遂报警。一共被骗28714元。案情对应风险类别为：刷单返利类"
    #     example_answer3 ='''[{"文本": "您好，我们提供高额返现任务，关注闲鱼账号即可赚取5元佣金，详情请添加微信好友并下载东青互联科技APP了解更多。", "风险点": "有"},{"文本": "感谢您使用闲鱼平台，我们提醒您注意保护个人账号安全，避免参与不明来源的返现活动", "风险点": "无"}]'''
    #     data = {
    #         "model": self.model_name,
    #         "messages": [
    #              {"role": "system", "content": prompt},
    #              {"role": "user", "content": example_user1},
    #              {"role": "assistant", "content": example_answer1},
    #              {"role": "user", "content": example_user2},
    #              {"role": "assistant", "content": example_answer2},
    #              {"role": "user", "content": question}
    #         ],
    #         "stream": False,
    #         "temperature": temperature
    #     }

    def generate_message(self,prompt, question,temperature=1.25):
        
        risk_scene = ['支付宝', '微信', '京东白条', 'QQ', '银行', '政府', '警察', '飞书', 'APP', '快手', '朋友', '税务',
            '社交媒体', '电子邮件', '短信', '电话', '在线购物平台', '投资网站', '约会应用', '招聘网站', '游戏平台',
            '虚拟货币交易平台', '慈善机构', '教育机构', '医疗保健', '法律服务', '物流公司', '旅游网站', '汽车销售',
            '房地产', '保险', '信用卡公司', '贷款服务', '技术支持', '在线论坛', '博客', '视频平台', '音乐平台',
            '新闻网站', '图书销售', '艺术品拍卖', '体育赛事', '彩票', '股票交易', '外汇交易', '在线教育', '远程工作',
            '自由职业平台', '众筹平台', '健康管理', '美容服务', '餐饮预订', '家政服务', '宠物服务', '金融服务',
            '保险理赔', '法律咨询', '移民服务', '留学服务', '职业培训', '技能认证', '在线会议', '网络研讨会',
            '虚拟活动', '在线课程', '电子书阅读', '有声书', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩',
            '在线医疗咨询', '药品购买', '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务',
            '儿童教育', '在线娱乐', '电影票务', '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订',
            '租车服务', '导游服务', '旅游保险', '旅游攻略', '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影',
            '旅游纪念品', '旅游体验', '在线购物', '电子产品', '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品',
            '玩具', '图书音像', '办公用品', '汽车配件', '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁',
            '汽车销售', '二手车交易', '汽车保险', '房地产买卖', '房地产租赁', '房地产评估', '房地产咨询', '房地产装修',
            '房地产管理', '房地产投资', '房地产贷款', '金融服务', '个人贷款', '企业贷款', '信用卡申请', '信用卡还款',
            '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险', '保险投资', '保险理财', '保险规划', '法律服务','移民服务', '留学服务', '签证申请', '签证续签',
            '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资', '留学规划', '职业培训', '技能认证', '职业规划', '职业咨询',
            '职业发展', '职业评估', '职业指导', '职业介绍', '职业招聘', '在线会议', '网络研讨会', '虚拟活动', '在线课程',
            '电子书阅读', '播客', '视频直播', '游戏直播', '电竞赛事', '体育博彩', '在线医疗咨询', '药品购买',
            '健康监测', '健身指导', '营养咨询', '心理咨询', '家庭护理', '养老服务', '儿童教育', '在线娱乐', '电影票务',
            '剧院票务', '音乐会票务', '体育赛事票务', '旅游预订', '酒店预订', '租车服务', '导游服务', '旅游保险', '旅游攻略',
            '旅游团购', '旅游定制', '旅游签证', '旅游咨询', '旅游摄影', '旅游纪念品', '旅游体验', '在线购物', '电子产品',
            '服装鞋帽', '珠宝首饰', '化妆品', '家居用品', '母婴用品', '图书音像', '办公用品', '汽车配件',
            '汽车保养', '汽车维修', '汽车美容', '汽车改装', '汽车租赁', '汽车销售', '二手车交易', '汽车保险', '房地产买卖',
            '房地产租赁', '房地产评估', '房地产咨询', '房地产装修', '房地产管理', '房地产投资', '房地产贷款', '金融服务',
            '个人贷款', '企业贷款', '信用卡申请', '信用卡还款', '信用卡提额', '信用卡积分', '信用卡优惠', '信用卡保险',
            '保险购买', '法律诉讼', '法律调解','移民服务', '留学服务', '签证申请', '签证续签', '签证咨询', '签证服务', '移民咨询', '移民规划', '移民投资',
            '留学咨询', '留学规划', '留学申请', '留学签证', '留学服务', '留学生活', '留学就业', '职业培训', '技能认证', '职业规划', '职业咨询','职业招聘']
        
        risk_people = ["消费者", "游戏玩家", "网购者", "公民", "企业员工", "学生", "教育工作者", "病人", "养生爱好者", 
            "法律事务当事人", "投资者", "单身人士", "求职者", "视频观众", "音乐爱好者", "新闻读者", "书籍购买者", 
            "艺术收藏者", "体育爱好者", "投保者", "信用卡持卡人", "技术设备用户", "论坛用户", "博客读者","网红","老年人",
            "新移民","宠物主人","社交媒体用户","新移民"]
        
        risk_way = ['转账', '添加好友', '下载应用', '充值', '加入群聊', '填写信息', '扫描二维码', '投资',
            '提供个人信息', '验证账户', '支付手续费', '领取奖品', '参与活动', '注册账号', '订阅服务', '购买商品', '申请贷款',
            '提交申请', '确认订单', '更新软件', '激活账户', '验证身份', '设置密码', '绑定银行卡', '授权登录', '分享内容',
            '参与调查', '填写问卷', '参与抽奖', '报名活动', '参与投票', '验证手机号', '激活优惠券',
            '预约服务', '反馈问题', '提交反馈', '查看广告', '上传文件', '下载资料', '发送验证码',
            '参与竞拍', '提交报价', '签订合同', '支付押金', '确认收货',  '邀请好友', 
            '参与竞赛', '更新密码', '申请认证', '更新资料', '修改密码', '绑定邮箱', '设置安全问题', '登录账户', '绑定手机', '验证邮箱', '设置支付密码', '修改绑定信息', '查看账户余额',]
        
        risk_label = ['冒充电商物流客服类', '虚假网络投资理财类', '虚假信用服务类', '虚假购物、服务类', '冒充公检法及政府机关类', '冒充领导、熟人类','网络婚恋、交友类', '冒充军警购物类诈骗', '网黑案件','无风险']
       

        # prompt = prompt.replace("<risk_scene>",random.choice(risk_scene))
        # prompt = prompt.replace("<risk_people>",random.choice(risk_people))
        # prompt = prompt.replace("<risk_way>",random.choice(risk_way))
        # prompt = prompt.replace("<risk_label>",random.choice(risk_label))
        question = question.replace("<risk_scence>",random.choice(risk_scene))
        question = question.replace("<risk_people>",random.choice(risk_people))
        question = question.replace("<risk_way>",random.choice(risk_way))
        # question = question.replace("<risk_label>",random.choice(risk_label))

        example_user1 = "现在给你一个诈骗场景为：'社交媒体',要求你使用'申请认证'的方法进行诈骗。对于受害者的称呼可以使用随机的用户名称呼该软件的用户，也可以直接不称呼。你需要保证你所生成的文本的风险类型为:冒充电商物流客服类,接下来是该风险类型诈骗文本的示例：您好，我是韵达快递的客服，很抱歉通知您，您的一个快递在运输过程中不慎丢失，我们将为您办理赔付，请添加我的微信并下载“上课宝”APP进行后续操作，微信号为002。" 
        example_answer1 = '''[{"文本": "我们注意到您在社交媒体上的活跃度，为了提升您的职业形象和增加求职机会，我们特别提供一次免费的认证服务。请点击以下链接完成认证：https://verify-now-5678.com/login，认证成功后，您将获得专业证书，可作为您求职的简历。机会难得，请尽快行动！祝您求职顺利！", "风险类别": "冒充电商物流客服类"},{"文本": "您在“抖音”上发布的小视频很有意思，我们很感兴趣，想要邀请你加入我们公司，我们会为您提供高薪职位，无需缴纳其它费用，但需要您点击这个链接验证你的身份，点击后按照网页中的指示操作即可。期待您的加入！", "风险类别": "冒充电商物流客服类"}]'''
        
        example_user2 = "现在给你一个诈骗场景为：'在线购物平台',要求你使用'参与抽奖'的方法进行诈骗。对于受害者的称呼可以使用随机的用户名称呼该软件的用户，也可以直接不称呼。你需要保证你所生成的文本的风险类型为:冒充电商物流客服类,接下来是该风险类型诈骗文本的示例：您好，我是中通快递的客服，很抱歉通知您，由于我们的工作人员操作失误，您的包裹不慎遗失。为了尽快解决此事，我们提供快速理赔服务，请您添加QQ号123456789，我们将通过语音通话指导您完成理赔流程。"
        example_answer2 = '''[{"文本": "感谢您一直以来对我们游戏平台的支持。为了回馈广大玩家，我们特别举办了一次抽奖活动。只需点击以下链接参与抽奖，即有机会赢取限量版游戏装备和独家游戏体验。请尽快参与，机会有限！祝您好运！", "风险类别": "冒充电商物流客服类"},{"文本": "为了庆祝我们平台的周年庆典，我们特别举办了一次抽奖活动。只需点击以下链接参与抽奖，即有机会赢取顶级游戏装备和独家游戏体验。请尽快参与，机会有限！祝您好运！", "风险类别": "冒充电商物流客服类"}]'''

        data = {
            "model": self.model_name,
            "messages": [
                 {"role": "system", "content": prompt},
                 {"role": "user", "content": example_user1},
                 {"role": "assistant", "content": example_answer1},
                 {"role": "user", "content": example_user2},
                 {"role": "assistant", "content": example_answer2},
                 {"role": "user", "content": question}
            ],
            "stream": False,
            "temperature": temperature
        }
        
        resp = requests.post(self.url, headers=self.headers, json=data, verify=False)
        
        if resp.status_code == 200:
            return resp.json()["choices"][0]["message"]['content']
        else:
            print(f"Error: {resp.status_code}")
            return None

def pipeline(client, temperature=1.25):
    def generate(input_text, output_text):
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                 {"role": "user", "content": input_text},
                 {"role": "assistant", "content": output_text}
            ],
            stream=False,
            temperature=temperature
        )
        return response.choices[0].message.content
    return generate


